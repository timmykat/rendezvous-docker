.user_info{'data-autocomplete' => "email"}
  - if defined?(user_fields) && user_fields
    .user_fields
      .row
        .col-md-12
          .form-group
            - if (@user == current_user)
              = f.input :email, label_html:  { class:  'sr-only' }, class:  'primary', placeholder:  'E-mail *', disabled:  true
              = f.input :id, as:  :hidden, input_html:  { value:  current_user.id }
        
      .row
        .col-md-12
          %h3 Personal Information
      .row
        .col-md-12
          %label Name
      .row
        .col-md-6.col-12
          .form-group
            = f.input :first_name, placeholder:  'First name *', input_html: {'data-autocomplete-target' => ''}
        .col-md-6.col-12
          .form-group
            = f.input :last_name, placeholder:  'Last name *', input_html: {'data-autocomplete-target' => ''} 

  - if defined?(address) && address
    .row
      .col-md-12
        %label Address
        -# .form-group
        -#   = f.input_field :address1, class:  'form-control', placeholder:  'Address 1'
        -# .form-group
        -#   = f.input_field :address2, class:  'form-control', placeholder:  'Address 2'
    .row
      .col-md-8.col-12
        .form-group
          %label City
          = f.input_field :city, class:  'form-control', placeholder:  'City *', 'data-autocomplete-target' => ''
      .col-md-4.col-12
        .form-group
          %label Zip/Postal Code
          = f.input_field :postal_code, class:  'form-control', placeholder:  'Zip/Postal Code *', 'data-autocomplete-target' => ''
    .row
      .col-md-6.col-12
        .form-group
          %label State/Province (US & Canada only)
          = f.input_field :state_or_province, collection:  state_province_list, as:  :grouped_select, group_method:  :last, include_blank:  '-- State/Prov (US/Can) --', class:  'form-control', 'data-autocomplete-target' => ''
      .col-md-6.col-12
        #country
          %label Country
          = f.input_field :country, collection:  country_list, as:  :select, :selected => 'USA', class:  'form-control', 'data-autocomplete-target' => ''

  - if defined?(connect) && connect
    .row
      .col-md-12
        %h3 Connect

        .card
          .card-body
            .card-text

              %label Citroenvie
              %p 
                Citroenvie is a publication for Citroen enthusiasts, with an active online presence at
                = link_to 'Citroenvie.com', 'http://citroenvie.com', target:  '_blank'
                who have been long-time supporters of the Rendezvous. If you would like to be put on their mailing list, check below.
              %p Citroen Rendezvous LLC and Citroenvie are separate entities, but we do share a love of Citroens.
              %p 
                %strong Note:
                This does not obligate you to become a member of Citroenvie. We are simply sharing your name and email address with them. 
              .form-group
                = f.input :citroenvie, inline_label:  "Yes! I'd like to receive email from Citroenvie."

  - if defined?(vehicles) && vehicles
    .row
      .col-md-12
        .card 
          .card-body
            .card-text
              = field_set_tag 'Vehicles', class: 'legend-sm' do
                #vehicles{ 'data-cocoon': true }
                  = f.simple_fields_for :vehicles do |v|
                    = render partial: 'vehicle_fields', locals: { f: v, nested: true }
                  .card-footer
                    .links
                      = link_to_add_association "#{icon(:plus)}#{icon(:car)}".html_safe, 
                        f, 
                        :vehicles, 
                        { render_options: { partial:  'vehicle_fields', locals: { nested: true }}}
                      Add a vehicle
