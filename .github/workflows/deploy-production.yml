name: Deploy Rendezvous Prod
run-name: Bulding and deploying Rendezvous production site

on:
  push:
    branches:
      - main

  pull-request:
    branches:
      - main
  
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'  # Default value if no input is provided
        type: string 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Check Out Repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1
 

      - name: Set Production Environment
        run: |
          echo "ENVIRONMENT=production" >> $GITHUB_ENV

      - name: Use the Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Rendezvous rails app image
        run: |
          docker build -f config/docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }} ./rendezvous        

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }}

      # Deploy via SSH
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}

      - name: Verify the evironment
        run: echo "The environment is $ENVIRONMENT"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOSTINGER_IP }}
          username: ${{ vars.HOSTINGER_USER }}
          key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}
          script: |
            if [ ! -d "/var/www/rendezvous-docker-prod" ]; then
              echo "    No repository directory - creating"
              mkdir -p /var/www/rendezvous-docker-prod
            fi
            cd /var/www/rendezvous-docker-prod
            echo "-- Updating the git repository --"
            if [ ! -d ".git" ]; then
              echo "    Not a git repository, cloning and checking out"
              git clone https://github.com/${{ github.repository }} .
            else
              echo "    Repository found, pulling the latest changes"
              git pull origin main
            fi
            echo "-- Checking out main branch"
            git checkout main
            echo "-- Installing JavaScript dependencies with Yarn --"
            docker exec rendezvous-rails-app-prod yarn install
            echo "-- Setting up the shared network"
            if ! docker network ls --filter name=^shared_server_network$ --quiet; then
              echo "    Not found, creating"
              docker network create shared_server_network
            else
              echo "    It exists"
            fi
            echo "-- Precompile assets"
            docker exec rendezvous-rails-app-prod rake assets:precompile
            echo "-- Bring down the site"
            docker compose -f production-compose.yml down
            echo "-- Relaunch the site"
            docker compose -f production-compose.yml up -d
                        echo "-- Running migrations if needed"
            if docker exec rendezvous-rails-app-prod bundle exec rails db:migrate:status | grep "down"; then
              echo "Pending migrations found. Running db:migrate..."
              docker exec rendezvous-rails-app-prod bundle exec rails db:migrate
            else
              echo "No pending migrations. Skipping db:migrate."
            fi
            
