name: Deploy Rendezvous Prod
run-name: Bulding and deploying Rendezvous production site

on:
  push:
    branches:
      - main

jobs:
  deploy-app:  
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}

      - name: Verify the evironment
        run: echo "The environment is $ENVIRONMENT"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOSTINGER_IP }}
          username: ${{ vars.HOSTINGER_USER }}
          key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}
          script: |
            cd /var/www/rendezvous-docker-prod
            echo "-- Pulling the latest --"
            git pull
            git checkout main

            echo "-- Stopping the existing container --"
            docker compose -f production-compose.yml down

            echo "-- Launching the new container with the latest image --"
            docker compose -f production-compose.yml up -d

            echo "-- Check to see if the container is running"
            CONTAINER_ID=$(docker ps --filter "name=rails_app_pro" --format="{{.ID}}"")
            if [ -z "$CONTAINER_D" ]; then
              echo "The rails container is not running"
              exit 1
            fi

            echo "-- Installing JavaScript dependencies with Yarn inside the container --"
            docker exec "$CONTAINER_ID" yarn install

            echo "-- Precompiling assets inside the container --"
            docker exec rendezvous-rails-app-prod rake assets:precompile

            echo "-- Restart the container"
            docker compose -f production-compose.yml down
            docker compose -f production-compose.yml up -d

            echo "-- Running migrations if needed --"
            if docker exec "$CONTAINER_ID" bundle exec rails db:migrate:status | grep "down"; then
              echo "Pending migrations found. Running db:migrate..."
              docker exec "$CONTAINER_ID" bundle exec rails db:migrate
            else
              echo "No pending migrations. Skipping db:migrate."
            fi

            echo "-- DONE --"
            
