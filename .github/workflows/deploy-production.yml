name: Deploy Rendezvous Prod
run-name: Bulding and deploying Rendezvous production site

on:
  workflow_call:
    
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'  # Default value if no input is provided
        type: string 

jobs:
  deploy-app:  
    runs-on: ubuntu-latest
    
    env:
      CONTAINER_NAME: "rendezvous-rails-app-prod"
      MAX_CHECKS: 10
      COUNT: 0
      STOPPED: true

    steps:
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}

      - name: Verify the evironment
        run: echo "The environment is $ENVIRONMENT"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOSTINGER_IP }}
          username: ${{ vars.HOSTINGER_USER }}
          key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}
          script: |
            if [ ! -d "/var/www/rendezvous-docker-prod" ]; then
              echo "    No repository directory - creating"
              mkdir -p /var/www/rendezvous-docker-prod
            fi
            cd /var/www/rendezvous-docker-prod
            echo "-- Updating the git repository --"
            if [ ! -d ".git" ]; then
              echo "    Not a git repository, cloning and checking out"
              git clone https://github.com/${{ github.repository }} .
            else
              echo "    Repository found, pulling the latest changes"
              git pull origin main
            fi
            echo "-- Checking out main branch"
            git checkout main
            echo "-- Restart the site"
            docker compose down
            docker compose -f hostinger-compose.yml up
            echo "-- Checking for the container to come up"
            while [ $COUNT -lt $MAX_CHECKS ]
            do
              if docker ps -q -f name=${CONTAINER_NAME}; then
                echo "The container is running."
                STOPPED=false
                break
              fi
              sleep 2
              COUNT=$((COUNT + 1))
            done
            if STOPPED; then
              echo "The app container never started"
              exit 1
            fi
            echo "-- Installing JavaScript dependencies with Yarn --"
            docker exec rendezvous-rails-app-prod yarn install
            echo "-- Precompile assets"
            docker exec rendezvous-rails-app-prod rake assets:precompile

            echo "-- Relaunch the site"
            docker compose -f hostinger-compose.yml up -d
            echo "-- Running migrations if needed"
            if docker exec rendezvous-rails-app-prod bundle exec rails db:migrate:status | grep "down"; then
              echo "Pending migrations found. Running db:migrate..."
              docker exec rendezvous-rails-app-prod bundle exec rails db:migrate
            else
              echo "No pending migrations. Skipping db:migrate."
            fi
            
