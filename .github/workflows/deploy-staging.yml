name: Deploy Rendezvous Staging
run-name: Building and deploying Rendezvous staging site

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: false
        default: 'staging'  # Default value if no input is provided
        type: string 

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'staging'  # Default value if no input is provided
        type: string 

jobs:
  deploy-app:  
    runs-on: ubuntu-latest
    
    env:
      CONTAINER_NAME: "rendezvous-rails-app-prod"
      MAX_CHECKS: 10
      COUNT: 0
      STOPPED: true

    steps:
      - name: Set environment
        run: |
          echo "ENVIRONMENT=${{ inputs.branch }}" >> $GITHUB_ENV

      - name: Debug the environment
        run: echo "The environment is $ENVIRONMENT"

      - name: Debug SSH environment
        run: |
          echo "Checking SSH environment variables:"
          env | grep SSH

      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOSTINGER_IP }}
          username: ${{ env.HOSTINGER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/rendezvous-docker-staging
            echo "-- Pulling the Docker image from the registry --"
            docker pull ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }}

            echo "-- Stopping the existing container --"
            docker compose -f hostinger-compose.yml down

            echo "-- Launching the new container with the latest image --"
            docker compose -f hostinger-compose.yml up -d

            echo "-- Installing JavaScript dependencies with Yarn inside the container --"
            docker exec rendezvous-rails-app-staging yarn install

            echo "-- Precompiling assets inside the container --"
            docker exec rendezvous-rails-app-staging rake assets:precompile

            echo "-- Running migrations if needed --"
            if docker exec rendezvous-rails-app-staging bundle exec rails db:migrate:status | grep "down"; then
              echo "Pending migrations found. Running db:migrate..."
              docker exec rendezvous-rails-app-staging bundle exec rails db:migrate
            else
              echo "No pending migrations. Skipping db:migrate."
            fi
            
