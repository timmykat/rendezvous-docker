name: Deploy Rendezvous Staging
run-name: Bulding and deploying Rendezvous staging site

on:
  push:
    branches:
      - staging
  
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'staging'  # Default value if no input is provided
        type: string 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Check Out Repository
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 1
 

      - name: Set Staging Environment
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "APP_DOMAIN=${{ vars.APP_DOMAIN }}" >> $GITHUB_ENV
          echo "RAILS_ENV=${{ env.RAILS_ENV }}" >> $GITHUB_ENV
          echo "RACK_ENV=${{ env.RACK_ENV }}" >> $GITHUB_ENV
          echo "RAILS_SECRET_KEY_BASE=${{ secrets.RAILS_SECRET_KEY_BASE }}" >> $GITHUB_ENV
          echo "RECAPTCHA_PUBLIC_KEY=${{ vars.RECAPTCHA_PUBLIC_KEY }}" >> $GITHUB_ENV
          echo "RECAPTCHA_PRIVATE_KEY=${{ secrets.RECAPTCHA_PRIVATE_KEY }}" >> $GITHUB_ENV
          echo "MAILCHIMP_API_KEY=${{ secrets.MAILCHIMP_API_KEY }}" >> $GITHUB_ENV
          echo "MYSQL_DATABASE=${{ env.MYSQL_DATABASE }}" >> $GITHUB_ENV
          echo "MYSQL_USER=${{ env.MYSQL_USER }}" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "SANDBOX_SQUARE_APP_ID=${{ vars.SANDBOX_SQUARE_APP_ID }}" >> $GITHUB_ENV
          echo "SANDBOX_SQUARE_LOCATION_ID=${{ vars.SANDBOX_SQUARE_LOCATION_ID }}" >> $GITHUB_ENV
          echo "SANDBOX_SQUARE_ACCESS_TOKEN=${{ secrets.SANDBOX_SQUARE_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> $GITHUB_ENV
          echo "SMTP_DOMAIN=${{ vars.SMTP_DOMAIN }}" >> $GITHUB_ENV
          echo "SMTP_PORT=${{ vars.SMTP_PORT }}" >> $GITHUB_ENV
          echo "SMTP_USER=${{ vars.SMTP_USER }}" >> $GITHUB_ENV
          echo "INFO_SENDING_ADDRESS=${{ vars.INFO_SENDING_ADDRESS }}" >> $GITHUB_ENV
          echo "SITE_ADMIN_SENDING_ADDRESS=${{ vars.SITE_ADMIN_SENDING_ADDRESS }}" >> $GITHUB_ENV
          echo "BREVO_API_KEY=${{ secrets.BREVO_API_KEY }}" >> $GITHUB_ENV
          
      - name: Use the Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Rendezvous rails app image
        run: |
          docker build -f config/docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }} ./rendezvous
        env:
          APP_DOMAIN: ${{env.APP_DOMAIN}}
          RAILS_ENV: ${{env.RAILS_ENV}}
          RACK_ENV: ${{env.RACK_ENV}}
          RAILS_SECRET_KEY_BASE: ${{env.RAILS_SECRET_KEY_BASE}}
          RECAPTCHA_PUBLIC_KEY: ${{vars.RECAPTCHA_PUBLIC_KEY}}
          RECAPTCHA_PRIVATE_KEY: ${{secrets.RECAPTCHA_PRIVATE_KEY}}
          MAILCHIMP_API_KEY: ${{secrets.MAILCHIMP_API_KEY}}
          MYSQL_DATABASE: ${{env.MYSQL_DATABASE}}
          MYSQL_USER: ${{env.MYSQL_USER}}
          MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}

          # Square sandbox info
          SANDBOX_SQUARE_APP_ID: ${{vars.SANDBOX_SQUARE_APP_ID}}
          SANDBOX_SQUARE_LOCATION_ID: ${{vars.SANDBOX_SQUARE_LOCATION_ID}}
          SANDBOX_SQUARE_ACCESS_TOKEN: ${{secrets.SANDBOX_SQUARE_ACCESS_TOKEN}}

          # Mailer info
          SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
          SMTP_DOMAIN: ${{vars.SMTP_DOMAIN}}
          SMTP_PORT: ${{vars.SMTP_PORT}}
          SMTP_USER: ${{vars.SMTP_USER}}
          SITE_ADMIN_SENDING_ADDRESS: ${{vars.SITE_ADMIN_SENDING_ADDRESS}}
          INFO_SENDING_ADDRESS: ${{vars.INFO_SENDING_ADDRES}}
          BREVO_API_KEY: ${{secrets.BREVO_API_KEY}}          

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }}

      # Deploy via SSH
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}

      # Upload the hostinger setup script
      # - name: Upload Hostinger setup script
      #   run: |
      #     scp -o StrictHostKeyChecking=no ./bin/setup_hostinger.sh ${{vars.HOSTINGER_USER}}@${{vars.HOSTINGER_IP}}:/home/webuser/bin

      - name: Debug the evironment
        run: echo "The environment is $ENVIRONMENT"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOSTINGER_IP }}
          username: ${{ vars.HOSTINGER_USER }}
          key: ${{ secrets.RENDEZVOUS_REPO_SSH_KEY }}
          script: |
            echo "-- Ensuring the directory structures --"
            chmod 755 ./bin/setup_hostinger.sh
            ./bin/setup_hostinger.sh
            cd /var/www/rendezvous-docker-staging
            echo "-- Updating the git repository --"
            if [ ! -d ".git" ]; then
              echo "    Not a git repository, cloning and checking out"
              git clone https://github.com/${{ github.repository }} .
              git checkout staging
            else
              echo "    Repository found, pulling the latest changes"
              git pull origin staging
            fi
            echo "-- Setting up the shared network"
            if ! docker network ls --filter name=^shared_server_network$ --quiet; then
              echo "    Not found, creating"
              docker network create shared_server_network
            else
              echo "    It exists"
            fi
            echo "-- Precompile assets"
            docker exec -it rendezvous-rails-app-staging rake assets:precompile
            echo "-- Bring down the site"
            docker compose -f staging-compose.yml down
            echo "-- Relaunch the site"
            docker compose -f staging-compose.yml up -d
