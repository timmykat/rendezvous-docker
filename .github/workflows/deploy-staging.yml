name: Deploy Rendezvous Staging
run-name: Bulding and deploying Rendezvous staging site

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Check Out Repository
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 1
 

      - name: Set Staging Environment
        run: echo "ENVIRONMENT=staging" >> $GITHUB_ENV

      - name: Use the Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Rendezvous rails app image
        run: |
          docker build -f config/docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }} ./rendezvous

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/rendezvous_rails_app:${{ github.sha }}

      # Deploy via SSH
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

      - name: Debug the evironment
        run: echo "The environment is $ENVIRONMENT"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_IP }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          script: |
            cd /var/www/rendezvous-docker-staging
            if [ ! -d ".git" ]; then
              echo "Not a git repository. Cloning the repository..."
              # Clone the repository if it's not a Git repository
              git clone https://github.com/${{ github.repository }} .
              git checkout staging
            else
              echo "Git repository found. Pulling the latest changes..."
              # If it's a Git repository, pull the latest changes
              git pull origin staging
            fi
            docker compose -f staging-compose.yml down
            docker compose -f staging-compose.yml up -d
